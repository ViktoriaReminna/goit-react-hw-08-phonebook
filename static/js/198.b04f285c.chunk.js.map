{"version":3,"file":"static/js/198.b04f285c.chunk.js","mappings":"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","sources":["pages/Register/Register.styled.js","pages/Register/Register.js","hook/PageHooks/SingUpHook.js"],"sourcesContent":["import { styled } from 'styled-components';\nexport const Div = styled.div`\n  position: relative;\n  max-width: 400px;\n  padding: 60px 50px;\n  margin: 50px auto 0;\n  background-size: cover;\nbackground-color: #80808030;\ndisplay: grid;\n\n  &:before {\n   content: \"\";\n   position: absolute;\n   top: 0;\n   left: 0;\n   right: 0;\n   bottom: 0;\n  box-shadow: 0 4px 6px rgb(65 132 144 / 10%), 0 1px 3px rgb(0 0 0 / 8%);\n`;\n\nexport const Form = styled.form`\n  position: relative;\n  display: table-caption;\n`;\n\nexport const H2 = styled.h2`\n  position: relative;\n  margin-top: 0;\n  color: #444;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 300;\n  font-size: 26px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  box-sizing: border-box;\n  padding: 0 25px;\n  margin: 0 15px 15px 0;\n  outline: none;\n  border: 1px solid #fff;\n  border-radius: 50px;\n  height: 46px;\n  width: 400px;\n  line-height: 46px;\n  font-size: 14px;\n  font-weight: 600;\n  text-decoration: none;\n  color: #444;\n  background-color: #fff;\n  box-shadow: 0 4px 6px rgb(65 132 144 / 10%), 0 1px 3px rgb(0 0 0 / 8%);\n  cursor: pointer;\n  user-select: none;\n  appearance: none;\n  touch-action: manipulation;\n  vertical-align: top;\n  transition: box-shadow 0.2s;\n`;\n\nexport const DivForm = styled.div`\n  display: inline-grid;\n  gap: 10px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  box-sizing: border-box;\n  padding: 0 25px;\n  margin: 0 15px 15px 0;\n  outline: none;\n  border: 1px solid #fff;\n  border-radius: 50px;\n  height: 46px;\n  line-height: 46px;\n  font-size: 14px;\n  font-weight: 600;\n  text-decoration: none;\n  color: #444;\n  background-color: #fff;\n  box-shadow: 0 4px 6px rgb(65 132 144 / 10%), 0 1px 3px rgb(0 0 0 / 8%);\n  cursor: pointer;\n  user-select: none;\n  appearance: none;\n  touch-action: manipulation;\n  vertical-align: top;\n  transition: box-shadow 0.2s;\n\n  &:focus-visible {\n    border: 1px solid #4c51f9;\n    outline: none;\n  }\n\n  &:hover {\n    transition: all 0.2s;\n    box-shadow: 0 7px 14px rgb(65 132 144 / 10%), 0 3px 6px rgb(0 0 0 / 8%);\n  }\n\n  &:active {\n    background-color: #808080;\n  }\n\n  &:disabled {\n    background-color: #eee;\n    border-color: #eee;\n    color: #444;\n    cursor: not-allowed;\n`;\n","import { useSingUpHook } from '../../hook/PageHooks/SingUpHook';\n\nimport { Button, Div, DivForm, Form, H2, Input } from './Register.styled';\n\nconst SingUp = () => {\n  const { handleSubmit, handleChange, name, email, password } = useSingUpHook();\n  return (\n    <Div>\n      <H2>Please enter your Name and Email for registration</H2>\n      <Form onSubmit={handleSubmit}>\n        <DivForm>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            placeholder=\"Example John\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </DivForm>\n        <DivForm>\n          Email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            pattern=\"([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\n            title=\"Enter your email\"\n            placeholder=\"Example user@mail.com\"\n            required\n            value={email}\n            onChange={handleChange}\n          />\n        </DivForm>\n        <DivForm>\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={handleChange}\n          />\n        </DivForm>\n        <Button type=\"submit\">Register</Button>\n      </Form>\n    </Div>\n  );\n};\n\nexport default SingUp;\n","import authOperations from 'redux/auth/auth_operations';\n\nimport { useState } from 'react';\n\nimport { toast } from 'react-hot-toast';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useNavigate } from 'react-router-dom';\n\nexport const useSingUpHook = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await dispatch(\n        authOperations.register({ name, email, password })\n      ).unwrap();\n      handleSignUpSuccess();\n    } catch (error) {\n      handleSignUpError(error);\n    }\n  };\n\n  const handleSignUpSuccess = () => {\n    toast.success('Account created successfully ✅');\n\n    setName('');\n    setEmail('');\n    setPassword('');\n\n    navigate('/dashboard');\n  };\n\n  const handleSignUpError = error => {\n    toast.error(\n      `Registration failed. Please try again. ${error.message || ''}`\n    );\n  };\n\n  return { handleSubmit, handleChange, name, email, password };\n};\n"],"names":["Div","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","H2","_templateObject3","Input","_templateObject4","DivForm","_templateObject5","Button","_templateObject6","_useSingUpHook","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","e","_context","prev","next","preventDefault","authOperations","unwrap","handleSignUpSuccess","t0","handleSignUpError","stop","_x","apply","arguments","toast","error","concat","message","handleChange","_ref","_ref$target","target","value","useSingUpHook","_jsxs","children","_jsx","onSubmit","type","pattern","title","placeholder","required","onChange"],"sourceRoot":""}