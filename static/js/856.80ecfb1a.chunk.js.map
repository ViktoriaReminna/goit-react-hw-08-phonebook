{"version":3,"file":"static/js/856.80ecfb1a.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.js","pages/Contacts/Contacts.module.css","components/FormContacts/FormContacts.styled.js","components/FormContacts/FormContacts.js","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Wrapper = styled.div`\n  margin: 20px auto;\n  overflow-y: auto;\n  overflow-x: hidden;\n  height: 200px;\n  width: 500px;\n`;\n\nexport const ContactListItem = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 10px 20px;\n  box-shadow: 0px 0px 2px 0px #008080;\n  border-radius: 4px;\n  background-color: #f5fcf6;\n  color: #008080;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n\n  button {\n    background-color: #add8e6;\n    color: white;\n    border: none;\n    padding: 4px 8px;\n    border-radius: 4px;\n    cursor: pointer;\n    margin-left: auto;\n    font-size: 24px;\n\n    &:hover {\n      background-color: #90ee90;\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { ContactListItem, Wrapper } from './ContactList.styled';\n\nimport { selectFilteredByName } from '../../redux/selectors';\n\nimport { useEffect } from 'react';\n\nimport { deleteContact, fetchContacts } from 'redux/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredByName);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = event => {\n    dispatch(deleteContact(event.target.dataset.id));\n  };\n\n  return (\n    <Wrapper>\n      <ul>\n        {contacts?.map(({ id, name, number }) => {\n          return (\n            <ContactListItem key={id}>\n              {name + ': ' + number}\n              <button type=\"button\" onClick={handleDeleteContact} data-id={id}>\n                Delete\n              </button>\n            </ContactListItem>\n          );\n        })}\n      </ul>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const InputFilter = styled.input`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 24px;\n  width: 500px;\n  height: 100%;\n  padding: 12px 12px 12px 14px;\n\n  margin: 10px auto;\n  border-radius: 4px;\n  outline: none;\n  border: none;\n  background-color: #ffffff;\n  box-shadow: 1px 1px 4px 0px rgba(0, 0, 0, 0.5);\n\n  &:focus {\n    background-color: #00ff7f;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { InputFilter } from './ContactFilter.styled';\n\nimport { selectFilteredContact } from '../../redux/selectors';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { changeFilterAction } from '../../redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilteredContact);\n  const dispatch = useDispatch();\n\n  const handleFilter = event => {\n    dispatch(changeFilterAction(event.currentTarget.value));\n  };\n\n  return (\n    <label>\n      <InputFilter\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Find contacts by name\"\n        onChange={handleFilter}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 10px;\n  align-items: center;\n`;\n\nexport const StyledField = styled.input`\n  padding: 12px 12px 12px 14px;\n  width: 500px;\n  height: 100%;\n  border-radius: 4px;\n  outline: none;\n  border: none;\n  background-color: #ffffff;\n  box-shadow: 1px 1px 4px 0px rgba(0, 0, 0, 0.5);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 24px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  padding: 8px;\n  min-width: 50px;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 22px;\n  border: none;\n  background: transparent;\n  text-align: center;\n  box-shadow: 1px 1px 4px 0px rgba(0, 0, 0, 0.5);\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import React from 'react';\n\nimport { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { StyledForm, StyledField, Label, Button } from './FormContacts.styled';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { selectContacts } from 'redux/selectors';\n\nimport { addContacts } from 'redux/operations';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleAddContact = (name, number) => {\n    return contacts?.find(contact => contact.name === name)\n      ? toast.error(`${name} is already in contacts`)\n      : dispatch(\n          addContacts({\n            name,\n            number,\n          })\n        );\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default: {\n        return;\n      }\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleAddContact(name, number);\n    toast.success(`${name} added to contacts.`);\n    onDelete();\n  };\n\n  const onDelete = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <div>\n      <StyledForm onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <StyledField\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={handleChange}\n            value={name}\n            required\n          />\n        </Label>\n        <Label>\n          <StyledField\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={handleChange}\n            value={number}\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </StyledForm>\n      <ToastContainer />\n    </div>\n  );\n};\n","import { Box } from 'components/Box';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/ContactFilter';\nimport style from './Contacts.module.css';\nimport { ContactForm } from 'components/FormContacts';\n\nexport default function ContactsPage() {\n  return (\n    <Box>\n      <div className={style.box}>\n        <h1 className={style.primeryTitle}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={style.secondaryTitle}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </Box>\n  );\n}\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","ContactListItem","_templateObject2","ContactList","contacts","useSelector","selectFilteredByName","dispatch","useDispatch","useEffect","fetchContacts","handleDeleteContact","event","deleteContact","target","dataset","id","_jsx","children","map","_ref","name","number","_jsxs","type","onClick","InputFilter","Filter","filter","selectFilteredContact","value","placeholder","onChange","changeFilterAction","currentTarget","StyledForm","StyledField","Label","_templateObject3","Button","_templateObject4","ContactForm","selectContacts","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","_event$target","onDelete","onSubmit","preventDefault","find","contact","toast","concat","addContacts","handleAddContact","pattern","title","required","ToastContainer","ContactsPage","Box","className","style"],"sourceRoot":""}